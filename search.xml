<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Shell小结]]></title>
    <url>%2F2020%2F06%2F20%2FShell-xiao-jie%2F</url>
    <content type="text"><![CDATA[Shell小结]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C小结]]></title>
    <url>%2F2020%2F06%2F20%2FC-xiao-jie%2F</url>
    <content type="text"><![CDATA[C小结基本语法 双引号引字符串，单引号引字符；12char a = &apos;a&apos;;char *a = &quot;a&quot;; // 字符串常量默认结尾有个看不见的&apos;\\0&apos;；字符串用字符数组或字符指针存储 ## 常用的库123sqlitecJsonlibcurl]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客管理流程]]></title>
    <url>%2F2020%2F06%2F20%2FHexo-bo-ke-guan-li-liu-cheng%2F</url>
    <content type="text"><![CDATA[Hexo博客管理流程Hexo静态博客写作与发布流程： 在 Boostnote 中写作并管理笔记，点滴、零碎的东西先放到Draft目录中； 执行 hexo new post {文章标题} 生成新博客文件； 将本地博客内容复制到新生成博客文件的正文处(more以下)，博客的title就是本地博客的标题(hexo new生成的文件名)，more分隔符以上简单描述该文信息，并填写tag和categories，boostnote中也打了相同的tag； 将本地博客涉及的图片复制到文章标题同名的文件夹中，并全局替换图片文件名前缀路径为文章标题目录名； 执行 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 发布静态博客。 hexo new &#39;title&#39; -&gt; 拷贝全文 -&gt; 删除标题 -&gt; 写tag -&gt; 写categories -&gt; 替换图片路径 -&gt; 发布后续修改麻烦的，在boostnote中修改了，还得替换图片路径，boostnote本身又不支持修改文章id和文章同名附件id后台搞个脚本自动化完成这些工作吧记住：定期备份 123456789101112--- Hexo头 标题 (#) 分类 标签 时间--- 描述 (&gt;)&lt;!-- more --&gt; 正文 (###) Hexo文件上传备份流程： 下载hexo分支，该分支保存的是hexo博客的业务文件： 1git clone -b hexo git@github.com:Tulagi/tulagi.github.io.git branch_of_hexo 执行 backup_hexo.sh 上传本地hexo博客业务文件： 1234567891011121314151617181920212223242526272829303132#!/bin/bashhexo_root_dir=/home/hexohexo_src_dir=$&#123;hexo_root_dir&#125;/hexohexo_dest_dir=$&#123;hexo_root_dir&#125;/hexo_backupcd $&#123;hexo_root_dir&#125;[ -d $&#123;hexo_dest_dir&#125; ] &amp;&amp; &#123; echo &quot;INFO: hexo backup dir exist&quot;; exit 1; &#125;# 1. 下载hexo分支文件：git clone -b hexo git@github.com:Tulagi/tulagi.github.io.git $&#123;hexo_dest_dir&#125;# 2. 删除当前该分支所有文件：cd $&#123;hexo_dest_dir&#125;git rm -r $&#123;hexo_dest_dir&#125;/&#123;_config.yml,.gitignore,node_modules.tree,package.json,package-lock.json,scaffolds,source,themes.tar.gz&#125;# 3. 复制本地hexo目录文件：cp -r $&#123;hexo_src_dir&#125;/&#123;_config.yml,.gitignore,package.json,package-lock.json,scaffolds,source&#125; $&#123;hexo_dest_dir&#125;# 4. 记录 node_modules 中的模块tree -a $&#123;hexo_src_dir&#125;/node_modules/ &gt; $&#123;hexo_dest_dir&#125;/node_modules.treetree -a $&#123;hexo_src_dir&#125;/node_modules/.bin &gt;&gt; $&#123;hexo_dest_dir&#125;/node_modules.tree# 5. 备份主题cd $&#123;hexo_src_dir&#125;tar -czvf $&#123;hexo_dest_dir&#125;/themes.tar.gz themescd -# 6. 上传git add -Agit commit -m &quot;$(date)&quot;git push origin hexo:hexo 精简流程，没上面那么麻烦 写文档 上传github 执行脚本发布123456789101112131415161718192021222324252627282930313233343536373839404142434445#!/bin/bashoutDir=$1boostnote_root=$2if [ ! -d &quot;$outDir&quot; ]; then mkdir &quot;$outDir&quot;fifor fileName in `ls $&#123;boostnote_root&#125;/notes/*.cson`; do id=`echo $&#123;fileName&#125; | sed -e &apos;s%.*/\\(.*\\)\\.cson%\\1%p&apos; | head -1` title=`sed -n &quot;/^title:/p&quot; &quot;$fileName&quot; | head -1 | sed -e &quot;s/title:\\s\\&quot;\\(.*\\)\\&quot;$/\\1/&quot;` date=`sed -n &quot;/^createdAt:/p&quot; &quot;$fileName&quot; | head -1 | sed -e &quot;s/createdAt:\\s\\&quot;\\(.*\\)T\\(.*\\)\\..*\\&quot;$/\\1 \\2/&quot;` tags=`sed -n &quot;/^tags:\\s\\[$/,/^\\]$/p&quot; &quot;$fileName&quot; | sed &apos;1d&apos; | sed &apos;$d&apos; | sed &apos;s/[ &quot;]//g&apos; | sed &apos;s/^/ - /g&apos;` categories=`echo $tags | head -1` file=&quot;$outDir/$title.md&quot; echo &quot;---&quot; &gt;&gt; $&#123;file&#125; echo &quot;title: $&#123;title&#125;&quot; &gt;&gt; $&#123;file&#125; echo &quot;categories:&quot; &gt;&gt; $&#123;file&#125; echo &quot;$&#123;categories&#125;&quot; &gt;&gt; $&#123;file&#125; echo &quot;tags:&quot; &gt;&gt; $&#123;file&#125; echo &quot;$&#123;tags&#125;&quot; &gt;&gt; $&#123;file&#125; echo &quot;date: $&#123;date&#125;&quot; &gt;&gt; $&#123;file&#125; echo &quot;---&quot; &gt;&gt; $&#123;file&#125; echo -e &quot;\\n&quot; &gt;&gt; $&#123;file&#125; echo &quot;&gt; $&#123;title&#125;&quot; &gt;&gt; $&#123;file&#125; echo -e &quot;\\n&quot; &gt;&gt; $&#123;file&#125; echo &apos;&lt;!-- more --&gt;&apos; &gt;&gt; $&#123;file&#125; echo -e &quot;\\n&quot; &gt;&gt; $&#123;file&#125; echo &quot;`sed -n &quot;/^content:\\s\&apos;&apos;&apos;$/,/^\&apos;&apos;&apos;$/p&quot; $fileName | sed &apos;1d&apos; | sed &apos;$d&apos; | cut -b 3-`&quot; &gt;&gt; $&#123;file&#125; sed -i &apos;s/\\\\\\\\/\\\\/g&apos; $&#123;file&#125; sed -i &quot;s%:storage\\\\\\\\.*\\\\\\\\\\(.*\\)%$&#123;title&#125;/\\1%g&quot; $&#123;file&#125; attachments_dir=$boostnote_root/attachments/$id [ -d $attachments_dir ] &amp;&amp; mkdir -p $outDir/$title/ &amp;&amp; cp -r $attachments_dir/* $outDir/$title/ echo &quot;$title.md file created.&quot;donegit pull origin masterhexo clean &amp;&amp; hexo g &amp;&amp; hexo d]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java小结]]></title>
    <url>%2F2020%2F06%2F20%2FJava-xiao-jie%2F</url>
    <content type="text"><![CDATA[Java小结]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Lua小结]]></title>
    <url>%2F2020%2F06%2F20%2FLua-xiao-jie%2F</url>
    <content type="text"><![CDATA[Lua小结]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>lua</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown语法]]></title>
    <url>%2F2020%2F06%2F20%2FMarkdown-yu-fa%2F</url>
    <content type="text"><![CDATA[Markdown语法折叠长句Boostnote是对应markdown记法的记事本，信息排序・共享的一种工具。- Features - · Search function to find memos in one shot· Supports markdown notation · Support for Mac, Windows, Linux, iOS, Android · Export and import to Plain text (.txt), Markdown (.md) format · Supports PDF saving · Can be used offline · Synchronize to dropbox etc. with setting · Supports theme colors and numerous fonts 表格123| 表头 | 表头 || --- | --- || aaa | bbb | html表示表格；1234567891011121314&lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;表头&lt;/th&gt; &lt;th&gt;表头&lt;/th&gt; &lt;/tr&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;aaa&lt;/th&gt; &lt;th&gt;bbb&lt;/th&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/thead&gt;&lt;/table&gt;]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python小结]]></title>
    <url>%2F2020%2F06%2F20%2FPython-xiao-jie%2F</url>
    <content type="text"><![CDATA[Python小结推导式ss列表推导式字典推导式python中无consant类型的变量原生无法实现不能修改某变量的功能 python单元测试库unittestpython线程池+队列模型]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[FAQ]]></title>
    <url>%2F2020%2F06%2F20%2FFAQ%2F</url>
    <content type="text"><![CDATA[FAQ各种遇到的问题及解决之道。 windows下打开git-bash执行python卡主： 在git-bash下用winpty python执行进入python。]]></content>
      <categories>
        <category>FAQ</category>
      </categories>
      <tags>
        <tag>FAQ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos容器镜像跑consul集群]]></title>
    <url>%2F2020%2F06%2F20%2Fcentos-rong-qi-jing-xiang-pao-consul-ji-qun%2F</url>
    <content type="text"><![CDATA[centos容器镜像跑consul集群docker相关命令1234567891011121314获取dockerhub镜像(不带版本拉取lastest)docker pull centos:&lt;version&gt;创建docker镜像docker build -t mydocker:0.1 .查看当前镜像docker image ls运行容器docker run -it -d --privileged=true -p 8501:8500 mydocker:0.1 /usr/sbin/init查看容器docker ps -a 安装docker-ce根据系统版本选择合适的docker-ce版本，最新的docker-ce版本可能不适配老的centos版本。 查看docker-ce可用版本： 12345678910111213141516171819202122232425[root@localhost ~]# yum list docker-ce --showduplicates | sort -r已加载插件：fastestmirror已安装的软件包可安装的软件包* updates: mirrors.cqu.edu.cnLoading mirror speeds from cached hostfile* extras: mirror.bit.edu.cndocker-ce.x86_64 3:18.09.0-3.el7 docker-ce-stabledocker-ce.x86_64 3:18.09.0-3.el7 @docker-ce-stabledocker-ce.x86_64 18.06.1.ce-3.el7 docker-ce-stabledocker-ce.x86_64 18.06.0.ce-3.el7 docker-ce-stabledocker-ce.x86_64 18.03.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 18.03.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.12.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.12.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.09.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.09.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.06.2.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.06.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.06.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.03.3.ce-1.el7 docker-ce-stabledocker-ce.x86_64 17.03.2.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.03.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.03.0.ce-1.el7.centos docker-ce-stable* base: mirrors.cqu.edu.cn 安装docker-ce： 1yum install docker-ce 启动docker： 1systemctl start docker 设置开机启动： 1systemctl enable docker 参考：&lt;Get Docker CE for CentOS \| Docker Documentation&gt; Dockerfilebase Dockerfile 根据centos镜像安装基础软件制作基础镜像: 123456789101112131415161718192021222324FROM centosRUN mkdir -p /etc/yum.repos.d/repo.bak/ &amp;&amp; \\ mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/repo.bak/COPY repo/CentOS7-Base-163.repo /etc/yum.repos.d/COPY repo/Centos-7.repo /etc/yum.repos.d/RUN yum clean all &amp;&amp; \\ yum makecache &amp;&amp; \\ yum install -y epel-releaseCOPY repo/epel-7.repo /etc/yum.repos.d/RUN yum clean all &amp;&amp; \\ yum makecacheRUN yum install -y net-tools &amp;&amp;\\ yum install -y iproute &amp;&amp; \\ yum install -y unzip &amp;&amp; \\ yum install -y vimCOPY conf/.vimrc /root/RUN alias vi=vim 参考：CentOS7系统配置国内yum源和epel源 根据定制的基础镜像安装业务镜像： 123456789101112131415161718FROM mybase:0.1COPY pkg/consul_1.4.0_linux_amd64.zip /homeRUN cd /home &amp;&amp; \\ unzip /home/consul_1.4.0_linux_amd64.zip &amp;&amp; \\ mv /home/consul /usr/local/binCOPY pkg/start.sh /homeCOPY pkg/test_consul.service /usr/lib/systemd/system/RUN chmod 644 /usr/lib/systemd/system/test_consul.service &amp;&amp; \\ systemctl enable test_consul.serviceEXPOSE 8500CMD [&quot;/usr/sbin/init&quot;] 参考：Centos7下Rinetd安装与应用, linux rinetd 端口转发部署 安装并自动运行consul配置systemctl系统服务 1234567891011[UNIT]Description=Test Consul[Service]Type=oneshotRemainAfterExit=trueExecStart=/bin/bash /home/start.shKillMode=process[Install]WantedBy=multi-user.target 启动脚本 123456#!/bin/bashlocal_ip=$(ifconfig | grep -oP &quot;172.17.0.\\d&#123;0,3&#125;&quot;)consul agent -server -bootstrap-expect=3 -data-dir=/tmp/consul -node=$&#123;local_ip&#125; -bind=$&#123;local_ip&#125; -datacenter=dc1 -client=0.0.0.0 -ui &gt;&gt; /home/start.log 2&gt;&amp;1 &amp;sleep 20consul join $&#123;local_ip&#125; 查看consul集群 12345[root@localhost ~]# docker ps -aCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES9bb07c7d4b3a mydocker:1.0 &quot;/usr/sbin/init&quot; 3 days ago Up 3 minutes 0.0.0.0:8502-&gt;8500/tcp consul_0.2caca6a79a152 mydocker:1.0 &quot;/usr/sbin/init&quot; 3 days ago Up 3 minutes 0.0.0.0:8501-&gt;8500/tcp consul_0.370e3e2f90afb mydocker:1.0 &quot;/usr/sbin/init&quot; 3 days ago Up 3 minutes 0.0.0.0:8500-&gt;8500/tcp consul_0.4 consul UI 使用docker-compose编排容器安装dockercompose 123456[root@localhost ~]# curl -L &quot;https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose[root@localhost ~]# chmod +x /usr/local/bin/docker-compose[root@localhost ~]# docker-compose --versiondocker-compose version 1.23.2, build 1110ad01 参考：Install Docker Compose \| Docker Documentation 根据场景编写docker-compose.yml 12345678910111213141516171819202122232425262728293031323334353637version: &apos;3&apos;services: consul_1: image: mydocker:1.0 container_name: docker_consul_1 hostname: consul_1 environment: - TZ=Asia/Shanghai ports: - 8501:8500 privileged: true tty: true command: /usr/sbin/init consul_2: image: mydocker:1.0 container_name: docker_consul_2 hostname: consul_2 environment: - TZ=Asia/Shanghai ports: - 8502:8500 privileged: true tty: true command: /usr/sbin/init consul_3: image: mydocker:1.0 container_name: docker_consul_3 hostname: consul_3 environment: - TZ=Asia/Shanghai ports: - 8503:8500 privileged: true tty: true command: /usr/sbin/init 启动容器 12345[root@localhost compose_consul]# docker-compose up -dCreating network &quot;compose_consul_default&quot; with the default driverCreating docker_consul_2 ... doneCreating docker_consul_1 ... doneCreating docker_consul_3 ... done 停止并删除容器 12345678[root@localhost compose_consul]# docker-compose downStopping docker_consul_1 ... doneStopping docker_consul_2 ... doneStopping docker_consul_3 ... doneRemoving docker_consul_1 ... doneRemoving docker_consul_2 ... doneRemoving docker_consul_3 ... doneRemoving network compose_consul_default 查看 123456[root@localhost compose_consul]# docker-compose ps Name Command State Ports-----------------------------------------------------------------docker_consul_1 /usr/sbin/init Up 0.0.0.0:8501-&gt;8500/tcpdocker_consul_2 /usr/sbin/init Up 0.0.0.0:8502-&gt;8500/tcpdocker_consul_3 /usr/sbin/init Up 0.0.0.0:8503-&gt;8500/tcp]]></content>
      <categories>
        <category>consul</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>consul</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git操作记录]]></title>
    <url>%2F2020%2F06%2F20%2Fgit-cao-zuo-ji-lu%2F</url>
    <content type="text"><![CDATA[git操作记录删除远端分支12git push origin :branchgit push origin --delete branch git重命名远端分支git rename oldbranch newbranchgit push origin :oldbranchgit push -u origin newbranch:newbranch]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vim常用操作]]></title>
    <url>%2F2020%2F06%2F20%2Fvim-chang-yong-cao-zuo%2F</url>
    <content type="text"><![CDATA[vim常用操作跳转到指定行12行号 + gg:行号 + Enter 设置原样粘贴，不会自动缩进1set paste gvim多标签打开新文件gvim切换tab123map &lt;C-tab&gt; &lt;Esc&gt;:tabnext&lt;CR&gt;gt/gTctrl + PgUp/PgDn vimgrep结果上下翻12nnoremap &lt;silent&gt; &lt;C-n&gt; :cnext&lt;CR&gt;nnoremap &lt;silent&gt; &lt;C-p&gt; :cprevious&lt;CR&gt; gvim调整字体大小zoom.vim vim原生粘贴:set paste vim折叠vim中的各种模式进入选择模式：gh vim配置文件中各种映射命令的区别mapnmapvmapimapnoremapnnoremapvnoremapinoremap]]></content>
      <categories>
        <category>vim</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络学习]]></title>
    <url>%2F2020%2F06%2F20%2Fwang-luo-xue-xi%2F</url>
    <content type="text"><![CDATA[网络学习二层、三层的理解二层交换、三层路由核心 -&gt; 汇聚 -&gt; 接入 -&gt; 主机 网络7/5/4模型]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>基本功</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一些工具]]></title>
    <url>%2F2020%2F06%2F20%2Fyi-xie-gong-ju%2F</url>
    <content type="text"><![CDATA[一些工具笔记Boostnote效率工具autohotkey 自动完成等everything 搜索Wgestures 手势snipaste 截图chrome插件 vim模拟插件: vimium tab休眠节省内存: the-great-suspender]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[这是一个测试文章]]></title>
    <url>%2F2020%2F06%2F20%2Fzhe-shi-yi-ge-ce-shi-wen-zhang%2F</url>
    <content type="text"><![CDATA[这是一个测试文章 abc def 123 456]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动化集成工具]]></title>
    <url>%2F2020%2F06%2F20%2Fzi-dong-hua-ji-cheng-gong-ju%2F</url>
    <content type="text"><![CDATA[自动化集成工具jenkinstravis ci]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>auto</tag>
      </tags>
  </entry>
</search>
