<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[折叠长句]]></title>
    <url>%2F2019%2F08%2F31%2F%E6%8A%98%E5%8F%A0%E9%95%BF%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[折叠长句 折叠长句Boostnote是对应markdown记法的记事本，信息排序・共享的一种工具。- Features - · Search function to find memos in one shot· Supports markdown notation · Support for Mac, Windows, Linux, iOS, Android · Export and import to Plain text (.txt), Markdown (.md) format · Supports PDF saving · Can be used offline · Synchronize to dropbox etc. with setting · Supports theme colors and numerous fonts]]></content>
  </entry>
  <entry>
    <title><![CDATA[测试hexo发布]]></title>
    <url>%2F2019%2F08%2F31%2F%E6%B5%8B%E8%AF%95hexo%E5%8F%91%E5%B8%83%2F</url>
    <content type="text"><![CDATA[测试hexo发布 测试hexo发布]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客管理流程]]></title>
    <url>%2F2019%2F08%2F31%2FHexo%E5%8D%9A%E5%AE%A2%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Hexo博客管理流程 Hexo博客管理流程 记录下使用hexo写博客的流程 Hexo静态博客写作与发布流程： 在 Boostnote 中写作并管理笔记，点滴、零碎的东西先放到Draft目录中； 执行 hexo new post {文章标题} 生成新博客文件； 将本地博客内容复制到新生成博客文件的正文处(more以下)，博客的title就是本地博客的标题(hexo new生成的文件名)，more分隔符以上简单描述该文信息，并填写tag和categories，boostnote中也打了相同的tag； 将本地博客涉及的图片复制到文章标题同名的文件夹中，并全局替换图片文件名前缀路径为文章标题目录名； 执行 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 发布静态博客。 hexo new &#39;title&#39; -&gt; 拷贝全文 -&gt; 删除标题 -&gt; 写tag -&gt; 写categories -&gt; 替换图片路径 -&gt; 发布后续修改麻烦的，在boostnote中修改了，还得替换图片路径，boostnote本身又不支持修改文章id和文章同名附件id后台搞个脚本自动化完成这些工作吧记住：定期备份 123456789101112--- Hexo头 标题 (#) 分类 标签 时间--- 描述 (&gt;)&lt;!-- more --&gt; 正文 (###) Hexo文件上传备份流程： 下载hexo分支，该分支保存的是hexo博客的业务文件： 1git clone -b hexo git@github.com:Tulagi/tulagi.github.io.git branch_of_hexo 执行 backup_hexo.sh 上传本地hexo博客业务文件： 1234567891011121314151617181920212223242526272829303132#!/bin/bashhexo_root_dir=/home/hexohexo_src_dir=$&#123;hexo_root_dir&#125;/hexohexo_dest_dir=$&#123;hexo_root_dir&#125;/hexo_backupcd $&#123;hexo_root_dir&#125;[ -d $&#123;hexo_dest_dir&#125; ] &amp;&amp; &#123; echo &quot;INFO: hexo backup dir exist&quot;; exit 1; &#125;# 1. 下载hexo分支文件：git clone -b hexo git@github.com:Tulagi/tulagi.github.io.git $&#123;hexo_dest_dir&#125;# 2. 删除当前该分支所有文件：cd $&#123;hexo_dest_dir&#125;git rm -r $&#123;hexo_dest_dir&#125;/&#123;_config.yml,.gitignore,node_modules.tree,package.json,package-lock.json,scaffolds,source,themes.tar.gz&#125;# 3. 复制本地hexo目录文件：cp -r $&#123;hexo_src_dir&#125;/&#123;_config.yml,.gitignore,package.json,package-lock.json,scaffolds,source&#125; $&#123;hexo_dest_dir&#125;# 4. 记录 node_modules 中的模块tree -a $&#123;hexo_src_dir&#125;/node_modules/ &gt; $&#123;hexo_dest_dir&#125;/node_modules.treetree -a $&#123;hexo_src_dir&#125;/node_modules/.bin &gt;&gt; $&#123;hexo_dest_dir&#125;/node_modules.tree# 5. 备份主题cd $&#123;hexo_src_dir&#125;tar -czvf $&#123;hexo_dest_dir&#125;/themes.tar.gz themescd -# 6. 上传git add -Agit commit -m &quot;$(date)&quot;git push origin hexo:hexo]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos容器镜像跑consul集群]]></title>
    <url>%2F2019%2F08%2F31%2Fcentos%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F%E8%B7%91consul%E9%9B%86%E7%BE%A4%2F</url>
    <content type="text"><![CDATA[centos容器镜像跑consul集群 centos容器镜像跑consul集群docker相关命令1234567891011121314获取dockerhub镜像(不带版本拉取lastest)docker pull centos:&lt;version&gt;创建docker镜像docker build -t mydocker:0.1 .查看当前镜像docker image ls运行容器docker run -it -d --privileged=true -p 8501:8500 mydocker:0.1 /usr/sbin/init查看容器docker ps -a 安装docker-ce根据系统版本选择合适的docker-ce版本，最新的docker-ce版本可能不适配老的centos版本。 查看docker-ce可用版本： 12345678910111213141516171819202122232425[root@localhost ~]# yum list docker-ce --showduplicates | sort -r已加载插件：fastestmirror已安装的软件包可安装的软件包 * updates: mirrors.cqu.edu.cnLoading mirror speeds from cached hostfile * extras: mirror.bit.edu.cndocker-ce.x86_64 3:18.09.0-3.el7 docker-ce-stabledocker-ce.x86_64 3:18.09.0-3.el7 @docker-ce-stabledocker-ce.x86_64 18.06.1.ce-3.el7 docker-ce-stabledocker-ce.x86_64 18.06.0.ce-3.el7 docker-ce-stabledocker-ce.x86_64 18.03.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 18.03.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.12.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.12.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.09.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.09.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.06.2.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.06.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.06.0.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.03.3.ce-1.el7 docker-ce-stabledocker-ce.x86_64 17.03.2.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.03.1.ce-1.el7.centos docker-ce-stabledocker-ce.x86_64 17.03.0.ce-1.el7.centos docker-ce-stable * base: mirrors.cqu.edu.cn 安装docker-ce： 1yum install docker-ce 启动docker： 1systemctl start docker 设置开机启动： 1systemctl enable docker 参考：&lt;Get Docker CE for CentOS | Docker Documentation&gt; Dockerfilebase Dockerfile 根据centos镜像安装基础软件制作基础镜像: 123456789101112131415161718192021222324FROM centosRUN mkdir -p /etc/yum.repos.d/repo.bak/ &amp;&amp; \ mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/repo.bak/COPY repo/CentOS7-Base-163.repo /etc/yum.repos.d/COPY repo/Centos-7.repo /etc/yum.repos.d/RUN yum clean all &amp;&amp; \ yum makecache &amp;&amp; \ yum install -y epel-releaseCOPY repo/epel-7.repo /etc/yum.repos.d/RUN yum clean all &amp;&amp; \ yum makecacheRUN yum install -y net-tools &amp;&amp;\ yum install -y iproute &amp;&amp; \ yum install -y unzip &amp;&amp; \ yum install -y vimCOPY conf/.vimrc /root/RUN alias vi=vim 参考：CentOS7系统配置国内yum源和epel源 根据定制的基础镜像安装业务镜像： 123456789101112131415161718FROM mybase:0.1COPY pkg/consul_1.4.0_linux_amd64.zip /homeRUN cd /home &amp;&amp; \ unzip /home/consul_1.4.0_linux_amd64.zip &amp;&amp; \ mv /home/consul /usr/local/binCOPY pkg/start.sh /homeCOPY pkg/test_consul.service /usr/lib/systemd/system/RUN chmod 644 /usr/lib/systemd/system/test_consul.service &amp;&amp; \ systemctl enable test_consul.serviceEXPOSE 8500CMD [&quot;/usr/sbin/init&quot;] 参考：Centos7下Rinetd安装与应用, linux rinetd 端口转发部署 安装并自动运行consul配置systemctl系统服务 1234567891011[UNIT]Description=Test Consul[Service]Type=oneshotRemainAfterExit=trueExecStart=/bin/bash /home/start.shKillMode=process[Install]WantedBy=multi-user.target 启动脚本 123456#!/bin/bashlocal_ip=$(ifconfig | grep -oP &quot;172.17.0.\d&#123;0,3&#125;&quot;)consul agent -server -bootstrap-expect=3 -data-dir=/tmp/consul -node=$&#123;local_ip&#125; -bind=$&#123;local_ip&#125; -datacenter=dc1 -client=0.0.0.0 -ui &gt;&gt; /home/start.log 2&gt;&amp;1 &amp;sleep 20consul join $&#123;local_ip&#125; 查看consul集群 12345[root@localhost ~]# docker ps -aCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES9bb07c7d4b3a mydocker:1.0 &quot;/usr/sbin/init&quot; 3 days ago Up 3 minutes 0.0.0.0:8502-&gt;8500/tcp consul_0.2caca6a79a152 mydocker:1.0 &quot;/usr/sbin/init&quot; 3 days ago Up 3 minutes 0.0.0.0:8501-&gt;8500/tcp consul_0.370e3e2f90afb mydocker:1.0 &quot;/usr/sbin/init&quot; 3 days ago Up 3 minutes 0.0.0.0:8500-&gt;8500/tcp consul_0.4 consul UI 使用docker-compose编排容器安装dockercompose 123456[root@localhost ~]# curl -L &quot;https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose[root@localhost ~]# chmod +x /usr/local/bin/docker-compose[root@localhost ~]# docker-compose --versiondocker-compose version 1.23.2, build 1110ad01 参考：Install Docker Compose | Docker Documentation 根据场景编写docker-compose.yml 12345678910111213141516171819202122232425262728293031323334353637version: &apos;3&apos;services: consul_1: image: mydocker:1.0 container_name: docker_consul_1 hostname: consul_1 environment: - TZ=Asia/Shanghai ports: - 8501:8500 privileged: true tty: true command: /usr/sbin/init consul_2: image: mydocker:1.0 container_name: docker_consul_2 hostname: consul_2 environment: - TZ=Asia/Shanghai ports: - 8502:8500 privileged: true tty: true command: /usr/sbin/init consul_3: image: mydocker:1.0 container_name: docker_consul_3 hostname: consul_3 environment: - TZ=Asia/Shanghai ports: - 8503:8500 privileged: true tty: true command: /usr/sbin/init 启动容器 12345[root@localhost compose_consul]# docker-compose up -dCreating network &quot;compose_consul_default&quot; with the default driverCreating docker_consul_2 ... doneCreating docker_consul_1 ... doneCreating docker_consul_3 ... done 停止并删除容器 12345678[root@localhost compose_consul]# docker-compose downStopping docker_consul_1 ... doneStopping docker_consul_2 ... doneStopping docker_consul_3 ... doneRemoving docker_consul_1 ... doneRemoving docker_consul_2 ... doneRemoving docker_consul_3 ... doneRemoving network compose_consul_default 查看 123456[root@localhost compose_consul]# docker-compose ps Name Command State Ports-----------------------------------------------------------------docker_consul_1 /usr/sbin/init Up 0.0.0.0:8501-&gt;8500/tcpdocker_consul_2 /usr/sbin/init Up 0.0.0.0:8502-&gt;8500/tcpdocker_consul_3 /usr/sbin/init Up 0.0.0.0:8503-&gt;8500/tcp]]></content>
      <tags>
        <tag>docker</tag>
        <tag>consul</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git操作记录]]></title>
    <url>%2F2019%2F08%2F31%2Fgit%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[git操作记录 git操作记录删除远端分支12git push origin :branchgit push origin --delete branch]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vim常用操作]]></title>
    <url>%2F2019%2F08%2F31%2Fvim%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[vim常用操作 vim常用操作 VIM常用操作记录 跳转到指定行12行号 + gg:行号 + Enter 设置原样粘贴，不会自动缩进1set paste]]></content>
  </entry>
  <entry>
    <title><![CDATA[2019]]></title>
    <url>%2F2019%2F08%2F31%2F2019%2F</url>
    <content type="text"><![CDATA[2019 20192019很关键！当前存在的问题： 早起 沉不下去，心有旁骛 没有要事优先，总是搞些杂七杂八的东西消磨了时间 工作方法不对路，及时反馈、邮件总结结论、多记录多沟通 做事的流程很乱，各种事情如何记录需要梳理出来，有了流程，那就坚定执行，然后反馈优化 我应该怎么做 列出来，把所有要做的、没做的、想做的、没做好的事，大大小小全列出来 技术相关 技术是立身之本啊 当前可以围绕工作深钻技术 列一列工作中需要那些：Java、consul、python、rpm、spec、nginx 列一列基础的一些技术能力：http、https、ssl、ssh、rpc、nginx、tomcat 英语 良性循环起来呀原地踏步 不进则退 身边的人都上进得很，进步很大，你要多学习啊，和自己比一把技术三步骤 学架构 读经典计算储存网络]]></content>
      <tags>
        <tag>2019</tag>
      </tags>
  </entry>
</search>
